/// <reference types="node" />
import type { Encoding } from './Encoding';
declare type TypedArray = Uint8Array | Uint16Array | Uint32Array | Int8Array | Int16Array | Int32Array;
declare class Buffers {
    static moveFromTypedArray(typedArray: TypedArray): Buffer;
    static copyFromTypedArray(typedArray: TypedArray): Buffer;
    static fromString(str: string, encoding?: Encoding): Buffer;
    static toString(buffer: Buffer, encoding?: Encoding): string;
    static copyToArrayBuffer(nodeBuffer: Buffer): ArrayBuffer;
    static moveToArrayBuffer(nodeBuffer: Buffer): ArrayBuffer;
    static copyToUint8Array(nodeBuffer: Buffer): Uint8Array;
    static moveToUint8Array(nodeBuffer: Buffer): Uint8Array;
}
export { Buffers };
